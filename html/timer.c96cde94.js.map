{"mappings":"qhBAOO,MAAMA,EAcXC,SACEC,KAAKC,MAAMC,YAAcF,KAAKG,gBAC9BH,KAAKG,iBAAmB,C,CAE1BC,QACEJ,KAAKK,QAAUC,YAAYN,KAAKD,OAAOQ,KAAKP,MAAO,KACnDA,KAAKQ,SAASC,aAAa,YAAY,GACvCT,KAAKU,QAAQC,gBAAgB,W,CAE/BC,OACEC,cAAcb,KAAKK,SACnBL,KAAKQ,SAASG,gBAAgB,YAC9BX,KAAKU,QAAQD,aAAa,YAAY,E,CAzBxCK,aAAYC,SAAEA,EAAQd,MAAEA,EAAQ,IAC9BD,KAAKG,gBAAkBF,EACvBD,KAAKgB,OAASC,SAASC,cAAcH,GACrCf,KAAKgB,OAAOG,mBAAmB,YAXT,sMAYtBnB,KAAKC,MAAQD,KAAKgB,OAAOE,cAAc,gBACvClB,KAAKQ,SAAWR,KAAKgB,OAAOE,cAAc,+BAC1ClB,KAAKU,QAAUV,KAAKgB,OAAOE,cAAc,8BAEzClB,KAAKD,SAELC,KAAKQ,SAASY,iBAAiB,QAASpB,KAAKI,MAAMG,KAAKP,OACxDA,KAAKU,QAAQU,iBAAiB,QAASpB,KAAKY,KAAKL,KAAKP,M,ECnB1D,IAAAqB,EAAAC,EAAA,SCGAL,SAASC,cAAc,QAAQC,mBAAmB,aDAhD,wEAAwEI,EAAAF,EAAA,CACtEG,KAAKC,OACLC,OAAO,+BCAI,IAAI5B,EAAM,CAAEiB,SAAU,WAAYd,MAAO,KACzC,IAAIH,EAAM,CAAEiB,SAAU,WAAYd,MAAO,KACzC,IAAIH,EAAM,CAAEiB,SAAU","sources":["src/js/classes/Timer.js","src/js/helpers/currentDate.js","src/js/timer.js"],"sourcesContent":["const timerMarkup = () => `\n<div class='timer'>\n<span class='timer-value'>yyyy-mm-dd hh:mm:ss</span>\n<button data-action=\"timer-start\">start</button>\n<button data-action=\"timer-stop\" disabled>stop</button>\n</div>`;\n\nexport class Timer {\n  constructor({ selector, value = 1 }) {\n    this.timerStartValue = value;\n    this.parent = document.querySelector(selector);\n    this.parent.insertAdjacentHTML('beforeend', timerMarkup());\n    this.value = this.parent.querySelector('.timer-value');\n    this.startBtn = this.parent.querySelector('[data-action=\"timer-start\"]');\n    this.stopBtn = this.parent.querySelector('[data-action=\"timer-stop\"]');\n\n    this.render();\n\n    this.startBtn.addEventListener('click', this.start.bind(this));\n    this.stopBtn.addEventListener('click', this.stop.bind(this));\n  }\n  render() {\n    this.value.textContent = this.timerStartValue;\n    this.timerStartValue += 1;\n  }\n  start() {\n    this.timerId = setInterval(this.render.bind(this), 1000);\n    this.startBtn.setAttribute('disabled', true);\n    this.stopBtn.removeAttribute('disabled');\n  }\n  stop() {\n    clearInterval(this.timerId);\n    this.startBtn.removeAttribute('disabled');\n    this.stopBtn.setAttribute('disabled', true);\n  }\n}\n","import moment from 'moment';\n\nconst currentDate = () =>\n  `<div class='current-date'>TIME NOW: <span class='current-date-value'>${moment(\n    Date.now()\n  ).format('YYYY-MM-DD ')}</span></div>`;\n\nexport { currentDate };\n","import { Timer } from './classes/Timer';\nimport { currentDate } from './helpers/currentDate';\n\ndocument.querySelector('body').insertAdjacentHTML('afterbegin', currentDate());\n\nconst timer1 = new Timer({ selector: '#timer-1', value: 10 });\nconst timer2 = new Timer({ selector: '#timer-2', value: 20 });\nconst timer3 = new Timer({ selector: '#timer-3' });\n"],"names":["$c3e98aec0500a185$export$c57e9b2d8b9e4de","render","this","value","textContent","timerStartValue","start","timerId","setInterval","bind","startBtn","setAttribute","stopBtn","removeAttribute","stop","clearInterval","constructor","selector","parent","document","querySelector","insertAdjacentHTML","addEventListener","$cxTnx","parcelRequire","$parcel$interopDefault","Date","now","format"],"version":3,"file":"timer.c96cde94.js.map"}